name: AgroMonitoring CI Pipeline

on:
  push:
    branches: [ci_cd_auto]
  pull_request:
    branches: [ci_cd_auto]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: timescale/timescaledb:latest-pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: agromonitor
          PGDATA: /var/lib/postgresql/data/pgdata
        ports: 
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest-django

      - name: Run Django tests with pytest
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/agromonitor
          API_BASE_URL: http://localhost:8000
          DB_NAME: agromonitor
          DB_USER: postgres
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432 
          FRONTEND_URL: http://localhost:3000
        run: |
          cd backend
          pytest

  frontend-jest-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: |
          cd frontend
          npm ci

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: Run Jest unit tests
        run: |
          cd frontend
          npm run test


  frontend-cypress-tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:22.12.0
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: |
          cd frontend
          npm ci --cache /tmp/.npm-cache
          npm run build
          apt-get update && apt-get install -y xvfb

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          browser: chrome
          install: false
          start: npm start
          wait-on: http://localhost:3000
          wait-on-timeout: 60
        env:
          CYPRESS_INSTALL_BINARY: 0
        

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build all Docker images
        run: |
          docker compose -f docker-compose.yml build
